import groovy.transform.Field

// We need this because of the mono repo :(
@Field String PROJECT_DIR = 'rusty-report-printer'

pipeline {
    agent {
        kubernetes {
            inheritFrom 'Node18Alpine'
            yamlMergeStrategy merge()
            defaultContainer 'rust'
            yaml '''
              spec:
                containers:
                  - name: rust
                    image: rustlang/rust:nightly-alpine
                    command: ["sleep", "infinity"]
                    resources:
                      requests:
                        cpu: 100m
                        memory: 256Mi
                      limits:
                        cpu: 2
                        memory: 256Mi
                  - name: kaniko
                    image: gcr.io/kaniko-project/executor:v1.8.1-debug
                    command: ["sleep", "infinity"]
                    resources:
                      requests:
                        cpu: 100m
                        memory: 512Mi
                      limits:
                        cpu: 2
                        memory: 1Gi
            '''
        }
    }

    environment {
        CARGO_UNSTABLE_SPARSE_REGISTRY = 'true'
    }

    options {
        buildDiscarder logRotator(numToKeepStr: '10')
        disableConcurrentBuilds()
        timeout(time: 10, unit: 'MINUTES')
        ansiColor('xterm')
    }

    stages {
        stage('Generate Report') {
            steps {
                dir(PROJECT_DIR) {
                    container('node18') {
                        sh './report_generator.js'
                    }
                }
            }
        }

        stage('Install dependencies') {
            steps {
                dir(PROJECT_DIR) {
                    // if we are on alpine, we need to install musl-dev
                    sh 'apk add --no-cache musl-dev=1.2.2-r7'
                }
            }
        }


        stage('Build') {
            steps {
                dir(PROJECT_DIR) {
                    sh 'cargo build --locked'
                }
            }
        }

        stage('Build Image') {
            steps {
                dir(PROJECT_DIR) {
                    container('kaniko') {
                        sh """/kaniko/executor --context=. \\
                          --dockerfile=./Dockerfile \\
                          ${getKanikoDestinations()} \\
                          --use-new-run --snapshotMode=redo \\
                          --no-push
                       """
                    }
                }
            }
        }
    }
}

def getKanikoDestinations() {
    def commitTag = "${env.GIT_BRANCH.replace('/', '-')}-${env.GIT_COMMIT}"
    def tags = [commitTag]

    if (env.GIT_BRANCH == 'master') {
        tags += 'latest'
    }

    return tags.collect {
        tag -> "--destination=rusty-report-printer:${tag}"
    }.join(' ')
}
